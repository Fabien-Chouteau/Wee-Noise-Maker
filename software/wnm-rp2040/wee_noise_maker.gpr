with "config/wee_noise_maker_config.gpr";

with "rp2040_hal.gpr";
with "embedded_components.gpr";

project Wee_Noise_Maker is

   for Languages use ("Ada", "C", "ASM_CPP");

   for Source_Dirs use ("../src",
                        "../src/gui",
                        "../src/generated",
                        "../src/rp2040");
   for Object_Dir use "obj";
   for Create_Missing_Dirs use "True";
   for Exec_Dir use "bin";
   for Main use ("wee_noise_maker.adb");

   for Runtime ("Ada") use RP2040_HAL'Runtime ("Ada");
   for Target use RP2040_HAL'Target;

   Linker_Switches := ("-T", Project'Project_Dir & "linker_script/memmap_default.ld",
                       RP2040_HAL.Boot_Stage_2);

   package Linker is
      for Leading_Switches ("Ada") use ("-Wl,-u_sbrk");
      for Default_Switches ("Ada") use Linker_Switches &
      ("-Wl,--print-memory-usage",
       "-Wl,--gc-sections",
       "-Wl,--allow-multiple-definition",
       "-lc");
   end Linker;

   type Enabled_Kind is ("enabled", "disabled");
   Compile_Checks : Enabled_Kind := External ("WEE_NOISE_MAKER_COMPILE_CHECKS", "disabled");
   Runtime_Checks : Enabled_Kind := External ("WEE_NOISE_MAKER_RUNTIME_CHECKS", "disabled");
   Style_Checks : Enabled_Kind := External ("WEE_NOISE_MAKER_STYLE_CHECKS", "disabled");
   Contracts_Checks : Enabled_Kind := External ("WEE_NOISE_MAKER_CONTRACTS", "disabled");

   type Build_Kind is ("debug", "optimize");
   Build_Mode : Build_Kind := External ("WEE_NOISE_MAKER_BUILD_MODE", "optimize");

   Compile_Checks_Switches := ();
   case Compile_Checks is
      when "enabled" =>
         Compile_Checks_Switches :=
           ("-gnatwa",  -- All warnings
            "-gnatVa",  -- All validity checks
            "-gnatwe"); -- Warnings as errors
      when others => null;
   end case;

   Runtime_Checks_Switches := ();
   case Runtime_Checks is
      when "enabled" => null;
      when others =>
         Runtime_Checks_Switches :=
           ("-gnatp"); -- Suppress checks
   end case;

   Style_Checks_Switches := ();
   case Style_Checks is
      when "enabled" =>
         Style_Checks_Switches :=
           ("-gnatyg",   -- GNAT Style checks
            "-gnaty-d",  -- Disable no DOS line terminators
            "-gnatyM80", -- Maximum line length
            "-gnatyO");  -- Overriding subprograms explicitly marked as such
      when others => null;
   end case;

   Contracts_Switches := ();
   case Contracts_Checks is
      when "enabled" =>
         Contracts_Switches :=
           ("-gnata"); --  Enable assertions and contracts
      when others => null;
   end case;

   Build_Switches := ();
   case Build_Mode is
      when "optimize" =>
         Build_Switches := ("-O3",     -- Optimization
                            "-gnatn"); -- Enable inlining
      when "debug" =>
         Build_Switches := ("-g",   -- Debug info
                            "-Og"); -- No optimization
   end case;

   package Compiler is
      for Default_Switches ("Ada") use
        Compile_Checks_Switches &
        Build_Switches &
        Runtime_Checks_Switches &
        Style_Checks_Switches &
        Contracts_Switches &
        ("-gnatw.X",            -- Disable warnings for No_Exception_Propagation
         "-gnatQ",              -- Don't quit. Generate ALI and tree files even if illegalities
         "-fstack-usage",       -- output stack usage information
         "-ffunction-sections", -- Separate ELF section for each function
         "-fdata-sections");    -- Separate ELF section for each variable
   end Compiler;

   package Binder is
      for Switches ("Ada") use ("-Es"); --  Symbolic traceback
   end Binder;

end Wee_Noise_Maker;
